include('auto');
//définition d'un plan qui contient le cellule de chaque entité de la map avec son type et son camp
function setTargetsMap(){
	var Entities = getAllies()+getEnemies();
	var Map = [], _ENTITY_TYPE;
	for (var entity in Entities) {
		if(isSummon(entity)) _ENTITY_TYPE = 2;
		else _ENTITY_TYPE = 1;
		if (isAlly(entity) && isAlive(entity)) {
			push(Map, [entity, getCell(entity), _ENTITY_TYPE, 1]);//[entité ,cellule, type, camp];
		}
		else if (isAlive(entity)) {
			push(Map, [entity ,getCell(entity), _ENTITY_TYPE, 2]);
		}
	}
	return Map;
}
function setLeeksMap(){
	var entities = [];
	var map = setTargetsMap();
	var leeks = [];
	for (var i = 0; i < count(setTargetsMap()); i++) {
		push(entities, map[i][0]);
	}
	for (var e in entities) {
		if(!isSummon(e)) push(leeks, e);
	}
	return leeks;
}
function getNearestELeek(){
	var leeks = setLeeksMap();
	var distance = [];
	var entities = [];
	for (var l in leeks) {
		if(!isAlly(l)){
		push(distance, getDistance(getCell(), getCell(l)));
		push(entities, l);
		}
	}
	return entities[search(distance, arrayMin(distance))];
}
function getEntityType(entity){
	if(!isSummon(entity)) return ENTITY_LEEK_;
	else{
		var name = getName(entity);
		return	 name == "metallic_bulb"	? ENTITY_METALLIC_BULB :
				(name == "healer_bulb"		? ENTITY_HEALER_BULB :
				(name == "lightning_bulb"	? ENTITY_LIGHTNING_BULB :
				(name == "fire_bulb"		? ENTITY_FIRE_BULB :
				(name == "iced_bulb"		? ENTITY_ICED_BULB :
				(name == "rocky_bulb"		? ENTITY_ROCKY_BULB : 
											  ENTITY_PUNY_BULB)))));
	}
}
if(getTurn() == 1){
	if(_ENCODING_STUFF[CHIP_TELEPORTATION]) _IS_TELEPORT = true;
	for (var i = 0; i < _MAX_ITEM_ID; i++) {
		if(isWeapon(i)){
			_ISWEAP[i] = true;
			_ITEM_MINRANGE[i] = getWeaponMinRange(i);
			_ITEM_MAXRANGE[i] = getWeaponMaxRange(i);
			_AREA[i] = getWeaponArea(i);
			_ITEMCOST[i] = getWeaponCost(i);
			_NEEDLOS[i] = weaponNeedLos(i);
			if(i != WEAPON_FLAME_THROWER){
				_ITEM_EFFECTS[i] = getWeaponEffects(i)[0][0];
				_ITEM_VALUE[i] = getWeaponEffects(i)[0][1];
			}else{
				_ITEM_EFFECTS[i] = getWeaponEffects(i)[1][0];
				_ITEM_VALUE[i] = getWeaponEffects(i)[1][1];
			} 
			_ITEM_INLINE[i] = getWeaponArea(i) == AREA_LASER_LINE? true:false;
			_ITEM_HAVECD[i] = false;
		}
		else{
			_ISWEAP[i] = false;
			_ITEM_MINRANGE[i] = getChipMinRange(i);
			_ITEM_MAXRANGE[i] = getChipMaxRange(i);
			_AREA[i] = getChipArea(i);
			_ITEMCOST[i] = getChipCost(i);
			_NEEDLOS[i] = chipNeedLos(i);
			_ITEM_EFFECTS[i] = getChipEffects(i)[0][0];
			_ITEM_VALUE[i] = getChipEffects(i)[0][1];
			_ITEM_INLINE[i] = getChipArea(i) == AREA_LASER_LINE? true:false;
			_ITEM_HAVECD[i] = getChipCooldown(i) == 0? false:true;
		}
	}
	_ITEM_MINRANGE[WEAPON_GAZOR] = 4;
	_ITEM_MINRANGE[CHIP_TOXIN] = 2;
	_ITEM_MINRANGE[CHIP_PLAGUE] = 4;
	for (var i = 0; i <= _MAX_CELLS; i++) {
		if(isObstacle(i)) _OBSTACLES[i] = true;//test cellules libres avec _OBSTACLES[i] == null
		_CIRCLE_AREA1[i] = circleEffectiveArea1(i);
		_CIRCLE_AREA2[i] = circleEffectiveArea2(i);
		_CIRCLE_AREA3[i] = circleEffectiveArea3(i);
	}
}
function updateGameState(){
	allies = [];
	enemies = [];
	_STR400 = false;
	_STR300 = false;
	_MGC400 = false;
	_MGC300 = false;
	if(_ENCODING_STUFF[CHIP_TELEPORTATION] != null) _IS_TELEPORT = true;
	for (var l in getAliveAllies()+getAliveEnemies()) {
		_VIRTUAL_STATE[l] = [];
		_LIFE[l] = getLife(l);
		_ABS_SHIELD[l] = getAbsoluteShield(l);
		_REL_SHIELD[l] = getRelativeShield(l);
		_PSN_LIFE[l] = getLife(l);
		_HEAL[l] = 0;
		var effects = getEffects(l);
		for (var i = 0; i < count(effects); i++) {
			if(effects[i][0] == EFFECT_POISON) _PSN_LIFE[l] -= effects[i][1];
			if(effects[i][0] == EFFECT_HEAL) _HEAL[l] += effects[i][1];
		}
		if(isEnemy(l)){
			if(getStrength(l) >= 400) _STR400 = true;
			if(getStrength(l) >= 300) _STR300 = true;
			if(getMagic(l) >= 400) _MGC400 = true;
			if(getMagic(l) >= 300) _MGC300 = true;
		}
		_MP[l] = getMP(l);
		_TP[l] = getTP(l);
		_STR[l] = getStrength(l);
		_MGC[l] = getMagic(l);
		var eType = getEntityType(l);
		if(isAlly(l)){
			if(eType == ENTITY_PUNY_BULB) _PUNY_COUNT += 1;
			if(eType == ENTITY_ICED_BULB) _ICED_COUNT += 1;
			if(eType == ENTITY_ROCKY_BULB) _ROCKY_COUNT += 1;
			if(eType == ENTITY_FIRE_BULB) _FIRE_COUNT += 1;
			if(eType == ENTITY_HEALER_BULB) _HEALER_COUNT += 1;
			if(eType == ENTITY_METALLIC_BULB) _METALLIC_COUNT += 1;
			if(eType == ENTITY_LIGHTNING_BULB) _LIGHTNING_COUNT += 1;
		}
		_VIRTUAL_STATE[l]["_rel"] = _REL_SHIELD[l];
		_VIRTUAL_STATE[l]["_abs"] = _ABS_SHIELD[l];
		_VIRTUAL_STATE[l]["_psn_life"] = _PSN_LIFE[l];
		_VIRTUAL_STATE[l]["_life"] = _LIFE[l];
		_VIRTUAL_STATE[l]["_heal"] = _HEAL[l];
		_VIRTUAL_STATE[l]["_mp"] = _MP[l];
		_VIRTUAL_STATE[l]["_tp"] = _TP[l];
		_VIRTUAL_STATE[l]["_str"] = _STR[l];
		_VIRTUAL_STATE[l]["_mgc"] = _MGC[l];
		_VIRTUAL_STATE[l]["death"] = false;
		if(isAlly(l)) push(allies, l);
		else push(enemies, l);
 	}
}
_REACHABLE_CELLS = getReachableCells(_SELF, getMP(_SELF));
